LIST OF GNU/LINUX COMMANDS
==========================

KERNEL
======

NETWORKING
==========
# Wireless | scan for wifi in range
sudo iwlist wlan0 scan |grep -E "ESSID|Quality|Group Cipher|Pairwise Ciphers"

# Wireless | generate wpa_supplicant config file
wpa_passphrase mywifi > wpa.conf

# Wireless | connect to wireless access point
sudo wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa.conf

# Wireless | release / renew dhcp lease
sudo dhclient -r
sudo dhclient wlan0

SECURITY
========
# Verify ps is reporting everything and has not been compromised.
# rootkit will often install their own ps command which hides
# kernel modules. If second output is larger than the first (ps ax)
# command output take a closer look at your server.
ps ax |wc -l
ls -d /proc/* | grep [0-9]|wc -l

# Verify ssh fingerprint upon first ssh connection
cd /etc/ssh/ && for file in *.pub; do ssh-keygen -lf $file; done

# Block usb devices with usbguard
apt-get install usbguard
usbguard generate-policy > /etc/usbguard/rules.conf
usbguard block-device 2
usbguard allow-device 4

# Install, configure, and check AIDE
apt-get install aide
aideinit
cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db
update-aide.conf
cp /var/lib/aide/aide.conf.autogenerated /etc/aide/aide.conf
mkdir /root/aide-test
touch /root/aide-test/test1
touch /root/aide-test/test2
aide -c /etc/aide/aide.conf --check

STORAGE / DISK
==============
# Compress / backup to tar file
tar zcvfp backup.tar.gz /home/user

# Extract / decompress from tar file
tar zxvf backup.tar.gz

# Create bootable USB from ISO
mkfs.vfat -F 32 /dev/sdX
dd if=/path_to_iso_without_space.iso of=/dev/sdX && sync

MISCELLANEOUS
=============
# Adjust brightness on laptop
echo 2700 |sudo tee /sys/class/backlight/intel_backlight/brightness

VIM EDITOR
==========
# Remove everything from cursor position to end of file
:.,$d

# Spell checking with vim
]s    # next word
[s    # previous word
z=    # list words
zg    # mark as good
zw    # mark as bad

SCRIPTING
=========
# Get value of variable from a file
. /etc/os-release; echo "$ID"

# web scraping jenkins server
curl -s https://jenkins.edgeapps.net/login?from=%2F |grep data-version \
  |awk -F "data-version" '{print $2}' \
  |awk -F "href=\"#skip2content\"" '{print $1}' \
  |awk -F "\"" '{$0=$2}1' \
  > current_version

# web scraping jenkins.io/download for latest version
curl -s "https://jenkins.io/download/" |grep "Download Jenkins" -A 1 \
  |grep -v "Download Jenkins" | head -1 \
  > latest_version
